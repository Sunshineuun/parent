<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>icu.uun</groupId>
    <artifactId>uun-parent</artifactId>
    <version>0.0.2</version>
    <name>uun-parent</name>
    <description>公共依赖管理</description>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.7</version>
        <relativePath/>
    </parent>

    <modules>
        <!--<module>elasticsearch</module>
        &lt;!&ndash;<module>common</module>&ndash;&gt;
        <module>jsonrpc</module>
        <module>kafka</module>
        &lt;!&ndash;<module>log</module>&ndash;&gt;
        <module>mongodb</module>
        <module>mybatis</module>
        <module>rabbitmq</module>
        <module>redis</module>
        <module>spring</module>
        <module>utils</module>-->
    </modules>

    <properties>
        <icu.uun.webstarter.version>0.0.2</icu.uun.webstarter.version>
        <icu.uun.dto.version>0.0.2</icu.uun.dto.version>
        <alibaba.cloud.version>2021.0.1.0</alibaba.cloud.version>
        <common-lang3.v>3.12.0</common-lang3.v>
        <common-pool2.v>2.11.1</common-pool2.v>
        <druid.v>1.2.8</druid.v>
        <fastjson.version>1.2.80</fastjson.version>
        <freemarker.version>2.3.31</freemarker.version>
        <hutool-all.v>5.7.22</hutool-all.v>
        <java.version>1.8</java.version>
        <jsonrpc.v>1.6</jsonrpc.v>
        <kafka.version>3.0.1</kafka.version>
        <lombok.version>1.18.20</lombok.version>
        <mapstruct.v>1.5.0.RC1</mapstruct.v>
        <mysql.version>8.0.28</mysql.version>
        <mybatis.plus.v>3.5.1</mybatis.plus.v>
        <redis-lock.v>1.1.8</redis-lock.v>
        <spring.boot.version>2.6.7</spring.boot.version>
        <spring.cloud-version>2021.0.1</spring.cloud-version>
        <spring.cloud.bootstrap-version>3.1.1</spring.cloud.bootstrap-version>
        <spring-kafka.version>2.8.5</spring-kafka.version>
        <selenium.v>4.0.0-alpha-6</selenium.v>
        <logstash-logback-encoder.v>6.5</logstash-logback-encoder.v>
        <spring-boot-admin.version>2.7.4</spring-boot-admin.version>

        <jjwt.v>0.9.0</jjwt.v>
        <java.jwt.v>3.10.3</java.jwt.v>
        <jax.v>2.3.0</jax.v>
        <javax.activation.v>1.1.1</javax.activation.v>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 导入Spring Cloud的依赖管理 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- alibaba cloud -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${alibaba.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring admin -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 如果resource下定义了 bootstrap.xml 并且你希望它被作为配置文件读取，那么就加上这个依赖 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bootstrap</artifactId>
                <version>${spring.cloud.bootstrap-version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-dubbo</artifactId>
                <version>${alibaba.cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>icu.uun</groupId>
                <artifactId>webconfig-starter</artifactId>
                <version>${icu.uun.webstarter.version}</version>
            </dependency>

            <dependency>
                <groupId>icu.uun</groupId>
                <artifactId>base-dto</artifactId>
                <version>${icu.uun.dto.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <!-- elastic search -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <!-- mysql 数据库 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!-- druid 数据库连接池管理 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.v}</version>
            </dependency>

            <!-- mybatis plus start -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.v}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis.plus.v}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis.plus.v}</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>

            <!-- redis -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!-- redis 分布式锁实现 -->
            <dependency>
                <groupId>com.github.hsindumas</groupId>
                <artifactId>redis-lock-spring-boot-starter</artifactId>
                <version>${redis-lock.v}</version>
            </dependency>

            <!-- mongodb -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-mongodb</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <!-- kafka -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka-test</artifactId>
                <version>${spring-kafka.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- jsonrpc4j start -->
            <dependency>
                <groupId>com.github.briandilley.jsonrpc4j</groupId>
                <artifactId>jsonrpc4j</artifactId>
                <version>${jsonrpc.v}</version>
            </dependency>

            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- fast josn -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- 工具类 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${common-lang3.v}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${common-pool2.v}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.v}</version>
            </dependency>
            <!-- 对象映射工具，深度拷贝 -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.v}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.v}</version>
            </dependency>
            <!-- selenium 自动化 浏览器模拟 -->
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-api</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-chrome-driver</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-edge-driver</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-edgehtml-driver</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-firefox-driver</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-firefox-xpi-driver</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-ie-driver</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-opera-driver</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-remote-driver</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-safari-driver</artifactId>
                <version>${selenium.v}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-support</artifactId>
                <version>${selenium.v}</version>
            </dependency>

            <!--  logback 推送日志文件到logstash -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.v}</version>
            </dependency>

            <!-- The org.codehaus.janino:commons-compiler:3.0.6 dependency -->
            <!-- will be automatically pulled in by Maven's transitivity rules -->
            <!-- 在加入logstash后，logback 启动报错，缺失该依赖，将依赖增加进来。 -->
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>${janino.version}</version>
            </dependency>

            <!--鉴权-->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.v}</version>
            </dependency>

            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java.jwt.v}</version>
            </dependency>

            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jax.v}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jax.v}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${jax.v}</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${javax.activation.v}</version>
            </dependency>

            <!-- spring admin server -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
            </dependency>
            <!-- spring admin client -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
            </dependency>


        </dependencies>
    </dependencyManagement>


    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <!--jar编译-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!--jar源文件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--Maven打包时跳过测试-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <includes>
                        <include>**/*Test*.java</include><!--run test classes-->
                    </includes>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- 版本控制
            versions:set -DnewVersion=1.5.6-SNAPSHOT versions:set-property -Dproperty=house.parent.version
            mvn versions:commit
            mvn versions:revert
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>dahachuxing</id>
            <name>dahachuxing repository</name>
            <url>http://192.168.110.24:8081/repository/maven-releases/</url>
        </repository>
<!--        <repository>-->
<!--            <id>dahachuxing</id>-->
<!--            <name>dahachuxing repository</name>-->
<!--            <url>http://192.168.110.24:8081/repository/maven-snapshots/</url>-->
<!--        </repository>-->
    </distributionManagement>

    <repositories>
        <repository>
            <id>dahachuxing</id>
            <name>dahachuxing repository</name>
            <url>http://192.168.110.24:8081/repository/dahachuxing/</url>
        </repository>
        <repository>
            <id>alimaven</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>simmed</id>
            <name>simmed repository</name>
            <url>https://packages.simmed.cn/repository/maven/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <url>https://repo.spring.io/snapshot</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>

</project>
